{
  "name": "vscode-php-surround",
  "displayName": "PHP Surround",
  "description": "Wrap blocks of PHP code quickly! ðŸš€",
  "version": "1.0.0",
  "publisher": "henriquex25",
  "licence": "LICENCE",
  "bugs": {
    "url": "https://github.com/Henriquex25/vscode-php-surround/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Henriquex25/vscode-php-surround.git"
  },
  "homepage": "https://github.com/Henriquex25/vscode-php-surround",
  "engines": {
    "vscode": "^1.55.0"
  },
  "categories": [
    "Snippets",
    "Formatters",
    "Other"
  ],
  "keywords": [
    "surround",
    "wrap",
    "selection",
    "code blocks",
    "snippet",
    "format"
  ],
  "markdown": "github",
  "icon": "images/logo.png",
  "galleryBanner": {
    "color": "#c2e1ea",
    "theme": "light"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./out/surround.js",
  "browser": "./out/surround.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "PHP Surround With",
      "properties": {
        "surround.showOnlyUserDefinedSnippets": {
          "type": "boolean",
          "markdownDescription": "Disables default snippets that comes with the extension and shows only used defined snippets.",
          "default": false
        },
        "surround.showRecentlyUsedFirst": {
          "type": "boolean",
          "markdownDescription": "Recently used snippets will be displayed on top.",
          "default": true
        },
        "surround.showUpdateNotifications": {
          "type": "boolean",
          "markdownDescription": "Shows notification when there is a new version of the extension.",
          "default": true
        },
        "surround.custom": {
          "type": "object",
          "default": {}
        },
        "surround.with.if": {
          "type": "object",
          "default": {
            "label": "if",
            "description": "if ($condition) { ... }",
            "disabled": false,
            "snippet": "if(${1:\\$condition}) {\n\t$TM_SELECTED_TEXT\n}$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.ifElse": {
          "type": "object",
          "default": {
            "label": "if/else",
            "description": "if ($condition) { ... } else { $else }",
            "disabled": false,
            "snippet": "if(${1:\\$condition}) {\n\t$TM_SELECTED_TEXT\n} else {\n\t$2\n}$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.tryCatch": {
          "type": "object",
          "default": {
            "label": "try/catch",
            "description": "try { ... } catch (err) { $catchBlock }",
            "disabled": false,
            "snippet": "try {\n\t$TM_SELECTED_TEXT\n} catch (\\Exception \\$exception) {\n\t$1\n}$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.foreach": {
          "type": "object",
          "default": {
            "label": "foreach",
            "description": "foreach ($1) { ... }",
            "disabled": false,
            "snippet": "foreach ($1 as $2) {\n\t$TM_SELECTED_TEXT\n}$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.for": {
            "type": "object",
            "default": {
                "label": "for",
                "description": "for ($0; ... ; $i++) { ... }",
                "disabled": false,
                "snippet": "for (${1:\\$i} = ${2:0}; ${3:\\$conditions}; $1++) {\n\t$TM_SELECTED_TEXT\n}$0",
                "languageIds": [
                    "php"
                ]
            }
        },
        "surround.with.arrowFunction": {
          "type": "object",
          "default": {
            "label": "arrowFunction",
            "description": "fn (\\$params) => ... ",
            "disabled": false,
            "snippet": "fn (${1:\\$params}) => $TM_SELECTED_TEXT$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.functionDeclaration": {
          "type": "object",
          "default": {
            "label": "functionDeclaration",
            "description": "function $name ($params) { ... }",
            "disabled": false,
            "snippet": "function ${1:name} (${2:\\$params}) {\n\t$TM_SELECTED_TEXT\n}$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.comment": {
          "type": "object",
          "default": {
            "label": "comment",
            "description": "/** ...  */",
            "disabled": false,
            "snippet": "/**\n* $TM_SELECTED_TEXT\n*/$0",
            "languageIds": [
                "php"
            ]
          }
        },
        "surround.with.region": {
          "type": "object",
          "default": {
            "label": "#region",
            "description": "#region $regionName ... #endregion",
            "disabled": false,
            "snippet": "// #region ${1:regionName}\n$TM_SELECTED_TEXT\n// #endregion$0",
            "languageIds": [
                "php"
            ]
          }
        }
      }
    },
    "commands": [
      {
        "command": "surround.with",
        "title": "Surround With"
      },
      {
        "command": "surround.with.if",
        "title": "if",
        "category": "Surround With"
      },
      {
        "command": "surround.with.ifElse",
        "title": "if/else",
        "category": "Surround With"
      },
      {
        "command": "surround.with.tryCatch",
        "title": "try/catch",
        "category": "Surround With"
      },
      {
        "command": "surround.with.foreach",
        "title": "foreach",
        "category": "Surround With"
      },
      {
        "command": "surround.with.for",
        "title": "for",
        "category": "Surround With"
      },
      {
        "command": "surround.with.arrowFunction",
        "title": "arrowFunction",
        "category": "Surround With"
      },
      {
        "command": "surround.with.functionDeclaration",
        "title": "functionDeclaration",
        "category": "Surround With"
      },
      {
        "command": "surround.with.comment",
        "title": "comment",
        "category": "Surround With"
      },
      {
        "command": "surround.with.region",
        "title": "#region",
        "category": "Surround With"
      }
    ],
    "keybindings": [
      {
        "command": "surround.with",
        "key": "ctrl+shift+T",
        "mac": "cmd+shift+T",
        "when": "editorHasSelection"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorHasSelection",
          "command": "surround.with",
          "group": "1_modification"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
  },
  "devDependencies": {
    "@types/jest": "^28.1.6",
    "@types/vscode": "^1.55.0",
    "@typescript-eslint/eslint-plugin": "^5.21.0",
    "@typescript-eslint/parser": "^5.21.0",
    "@vscode/test-web": "^0.0.29",
    "eslint": "^8.14.0",
    "jest": "^28.1.3",
    "ts-jest": "^28.0.7",
    "typescript": "^4.6.4"
  }
}
